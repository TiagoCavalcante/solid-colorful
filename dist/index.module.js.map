{"version":3,"file":"index.module.js","sources":["../src/hooks/useEventCallback.ts","../src/utils/clamp.ts","../src/components/common/Interactive.tsx","../src/utils/format.ts","../src/components/common/Pointer.tsx","../src/utils/round.ts","../src/utils/convert.ts","../src/components/common/Hue.tsx","../src/components/common/Saturation.tsx","../src/utils/compare.ts","../src/hooks/useColorManipulation.ts","../src/utils/nonce.ts","../src/hooks/useStyleSheet.ts","../src/components/common/ColorPicker.tsx","../src/components/HexColorPicker.tsx","../src/components/common/Alpha.tsx","../src/components/common/AlphaColorPicker.tsx","../src/components/HslaColorPicker.tsx","../src/components/HslaStringColorPicker.tsx","../src/components/HslColorPicker.tsx","../src/components/HslStringColorPicker.tsx","../src/components/HsvaColorPicker.tsx","../src/components/HsvaStringColorPicker.tsx","../src/components/HsvColorPicker.tsx","../src/components/HsvStringColorPicker.tsx","../src/components/RgbaColorPicker.tsx","../src/components/RgbaStringColorPicker.tsx","../src/components/RgbColorPicker.tsx","../src/components/RgbStringColorPicker.tsx","../src/utils/validate.ts","../src/components/common/ColorInput.tsx","../src/components/HexColorInput.tsx"],"sourcesContent":["// Saves incoming handler to the ref in order to avoid \"useCallback hell\"\nexport function useEventCallback<T>(handler?: (value: T) => void): (value: T) => void {\n  const callbackRef = handler\n\n  const fn = (value: T) => {\n    if (callbackRef) callbackRef(value)\n  }\n\n  return fn\n}\n","// Clamps a value between an upper and lower bound.\n// We use ternary operators because it makes the minified code\n// 2 times shorter then `Math.min(Math.max(a,b),c)`\nexport const clamp = (number: number, min = 0, max = 1): number => {\n  return number > max ? max : number < min ? min : number\n}\n","import { createEffect, createMemo, JSX, splitProps } from \"solid-js\"\nimport { useEventCallback } from \"../../hooks/useEventCallback\"\nimport { clamp } from \"../../utils/clamp\"\n\nexport interface Interaction {\n  left: number\n  top: number\n}\n\n// Check if an event was triggered by touch\nconst isTouch = (event: MouseEvent | TouchEvent): event is TouchEvent => \"touches\" in event\n\n// Finds a proper touch point by its identifier\nconst getTouchPoint = (touches: TouchList, touchId: null | number): Touch => {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === touchId) return touches[i]\n  }\n  return touches[0]\n}\n\n// Finds the proper window object to fix iframe embedding issues\nconst getParentWindow = (node?: HTMLDivElement | null): Window => {\n  return (node && node.ownerDocument.defaultView) || self\n}\n\n// Returns a relative position of the pointer inside the node's bounding box\nconst getRelativePosition = (\n  node: HTMLDivElement,\n  event: MouseEvent | TouchEvent,\n  touchId: null | number\n): Interaction => {\n  const rect = node.getBoundingClientRect()\n\n  // Get user's pointer position from `touches` array if it's a `TouchEvent`\n  const pointer = isTouch(event) ? getTouchPoint(event.touches, touchId) : (event as MouseEvent)\n\n  return {\n    left: clamp((pointer.pageX - (rect.left + getParentWindow(node).pageXOffset)) / rect.width),\n    top: clamp((pointer.pageY - (rect.top + getParentWindow(node).pageYOffset)) / rect.height),\n  }\n}\n\n// Browsers introduced an intervention, making touch events passive by default.\n// This workaround removes `preventDefault` call from the touch handlers.\n// https://github.com/facebook/react/issues/19651\nconst preventDefaultMove = (event: MouseEvent | TouchEvent): void => {\n  !isTouch(event) && event.preventDefault()\n}\n\n// Prevent mobile browsers from handling mouse events (conflicting with touch ones).\n// If we detected a touch interaction before, we prefer reacting to touch events only.\nconst isInvalid = (event: MouseEvent | TouchEvent, hasTouch: boolean): boolean => {\n  return hasTouch && !isTouch(event)\n}\n\ninterface Props {\n  onMove: (interaction: Interaction) => void\n  onKey: (offset: Interaction) => void\n  children: JSX.Element\n}\n\nconst Interactive = (props: Props) => {\n  const [local, rest] = splitProps(props, [\"onMove\", \"onKey\"])\n\n  const onMoveCallback = useEventCallback<Interaction>(local.onMove)\n  const onKeyCallback = useEventCallback<Interaction>(local.onKey)\n  let container: HTMLDivElement | null = null // eslint-disable-line prefer-const\n  let touchId: null | number = null\n  let hasTouch = false\n\n  const events = createMemo(() => {\n    const handleMoveStart = (event: MouseEvent | TouchEvent) => {\n      const el = container\n      if (!el) return\n\n      // Prevent text selection\n      preventDefaultMove(event)\n\n      if (isInvalid(event, hasTouch) || !el) return\n\n      if (isTouch(event)) {\n        hasTouch = true\n        const changedTouches = event.changedTouches || []\n        if (changedTouches.length) touchId = changedTouches[0].identifier\n      }\n\n      el.focus()\n      onMoveCallback(getRelativePosition(el, event, touchId))\n      toggleDocumentEvents(true)\n    }\n\n    const handleMove = (event: MouseEvent | TouchEvent) => {\n      // Prevent text selection\n      preventDefaultMove(event)\n\n      // If user moves the pointer outside of the window or iframe bounds and release it there,\n      // `mouseup`/`touchend` won't be fired. In order to stop the picker from following the cursor\n      // after the user has moved the mouse/finger back to the document, we check `event.buttons`\n      // and `event.touches`. It allows us to detect that the user is just moving his pointer\n      // without pressing it down\n      const isDown = isTouch(event) ? event.touches.length > 0 : event.buttons > 0\n\n      if (isDown && container) {\n        onMoveCallback(getRelativePosition(container, event, touchId))\n      } else {\n        toggleDocumentEvents(false)\n      }\n    }\n\n    const handleMoveEnd = () => toggleDocumentEvents(false)\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      const keyCode = event.which || event.keyCode\n\n      // Ignore all keys except arrow ones\n      if (keyCode < 37 || keyCode > 40) return\n      // Do not scroll page by arrow keys when document is focused on the element\n      event.preventDefault()\n      // Send relative offset to the parent component.\n      // We use codes (37←, 38↑, 39→, 40↓) instead of keys ('ArrowRight', 'ArrowDown', etc)\n      // to reduce the size of the library\n      onKeyCallback({\n        left: keyCode === 39 ? 0.05 : keyCode === 37 ? -0.05 : 0,\n        top: keyCode === 40 ? 0.05 : keyCode === 38 ? -0.05 : 0,\n      })\n    }\n\n    function toggleDocumentEvents(state?: boolean) {\n      const touch = hasTouch\n      const el = container\n      const parentWindow = getParentWindow(el)\n\n      // Add or remove additional pointer event listeners\n      const toggleEvent = state ? parentWindow.addEventListener : parentWindow.removeEventListener\n      toggleEvent(touch ? \"touchmove\" : \"mousemove\", handleMove)\n      toggleEvent(touch ? \"touchend\" : \"mouseup\", handleMoveEnd)\n    }\n\n    return { handleMoveStart, handleKeyDown, toggleDocumentEvents }\n  })\n\n  // Remove window event listeners before unmounting\n  createEffect(() => events().toggleDocumentEvents())\n\n  return (\n    <div\n      {...rest}\n      onTouchStart={events().handleMoveStart}\n      onMouseDown={events().handleMoveStart}\n      class=\"solid-colorful__interactive\"\n      ref={container!}\n      onKeyDown={events().handleKeyDown}\n      tabIndex={0}\n      role=\"slider\"\n    />\n  )\n}\n\nexport { Interactive }\n","export const formatClassName = (names: unknown[]): string => names.filter(Boolean).join(\" \")\n","import { formatClassName } from \"../../utils/format\"\n\ninterface Props {\n  class?: string\n  top?: number\n  left: number\n  color: string\n}\n\nexport const Pointer = (props: Props) => {\n  const nodeClass = formatClassName([\"solid-colorful__pointer\", props.class])\n\n  return (\n    <div\n      class={nodeClass}\n      style={{\n        top: `${(props.top ?? 0.5) * 100}%`,\n        left: `${props.left * 100}%`,\n      }}\n    >\n      <div class=\"solid-colorful__pointer-fill\" style={{ \"background-color\": props.color }} />\n    </div>\n  )\n}\n","export const round = (number: number, digits = 0, base = Math.pow(10, digits)): number => {\n  return Math.round(base * number) / base\n}\n","import { round } from \"./round\"\nimport { RgbaColor, RgbColor, HslaColor, HslColor, HsvaColor, HsvColor } from \"../types\"\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nconst angleUnits: Record<string, number> = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2),\n}\n\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex))\n\nexport const hexToRgba = (hex: string): RgbaColor => {\n  if (hex[0] === \"#\") hex = hex.substr(1)\n\n  if (hex.length < 6) {\n    return {\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: 1,\n    }\n  }\n\n  return {\n    r: parseInt(hex.substr(0, 2), 16),\n    g: parseInt(hex.substr(2, 2), 16),\n    b: parseInt(hex.substr(4, 2), 16),\n    a: 1,\n  }\n}\n\nexport const parseHue = (value: string, unit = \"deg\"): number => {\n  return Number(value) * (angleUnits[unit] || 1)\n}\n\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\n  const matcher =\n    /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i\n  const match = matcher.exec(hslString)\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 }\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  })\n}\n\nexport const hslStringToHsva = hslaStringToHsva\n\nexport const hslaToHsva = (props: HslaColor): HsvaColor => {\n  const s = (props.s * (props.l < 50 ? props.l : 100 - props.l)) / 100\n\n  return {\n    h: props.h,\n    s: s > 0 ? ((2 * s) / (props.l + s)) * 100 : 0,\n    v: props.l + s,\n    a: props.a,\n  }\n}\n\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva))\n\nexport const hsvaToHsla = (props: HsvaColor): HslaColor => {\n  const hh = ((200 - props.s) * props.v) / 100\n\n  return {\n    h: round(props.h),\n    s: round(\n      hh > 0 && hh < 200 ? ((props.s * props.v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0\n    ),\n    l: round(hh / 2),\n    a: round(props.a, 2),\n  }\n}\n\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\n  const { h, s, l } = hsvaToHsla(hsva)\n  return `hsl(${h}, ${s}%, ${l}%)`\n}\n\nexport const hsvaToHsvString = (hsva: HsvaColor): string => {\n  const { h, s, v } = roundHsva(hsva)\n  return `hsv(${h}, ${s}%, ${v}%)`\n}\n\nexport const hsvaToHsvaString = (hsva: HsvaColor): string => {\n  const { h, s, v, a } = roundHsva(hsva)\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`\n}\n\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\n  const { h, s, l, a } = hsvaToHsla(hsva)\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`\n}\n\nexport const hsvaToRgba = (props: HsvaColor): RgbaColor => {\n  const h = (props.h / 360) * 6\n  const s = props.s / 100\n  const v = props.v / 100\n\n  const hh = Math.floor(h),\n    b = v * (1 - s),\n    c = v * (1 - (h - hh) * s),\n    d = v * (1 - (1 - h + hh) * s),\n    module = hh % 6\n\n  return {\n    r: round([v, c, b, b, d, v][module] * 255),\n    g: round([d, v, v, c, b, b][module] * 255),\n    b: round([b, b, d, v, v, c][module] * 255),\n    a: round(props.a, 2),\n  }\n}\n\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\n  const { r, g, b } = hsvaToRgba(hsva)\n  return `rgb(${r}, ${g}, ${b})`\n}\n\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\n  const { r, g, b, a } = hsvaToRgba(hsva)\n  return `rgba(${r}, ${g}, ${b}, ${a})`\n}\n\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\n  const matcher =\n    /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i\n  const match = matcher.exec(hsvString)\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 }\n\n  return roundHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  })\n}\n\nexport const hsvStringToHsva = hsvaStringToHsva\n\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\n  const matcher =\n    /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i\n  const match = matcher.exec(rgbaString)\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 }\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\n  })\n}\n\nexport const rgbStringToHsva = rgbaStringToHsva\n\nconst format = (number: number) => {\n  const hex = number.toString(16)\n  return hex.length < 2 ? \"0\" + hex : hex\n}\n\nexport const rgbaToHex = (props: RgbaColor): string => {\n  return \"#\" + format(props.r) + format(props.g) + format(props.b)\n}\n\nexport const rgbaToHsva = (props: RgbaColor): HsvaColor => {\n  const max = Math.max(props.r, props.g, props.b)\n  const delta = max - Math.min(props.r, props.g, props.b)\n\n  // prettier-ignore\n  const hh = delta\n    ? max === props.r\n      ? (props.g - props.b) / delta\n      : max === props.g\n        ? 2 + (props.b - props.r) / delta\n        : 4 + (props.r - props.g) / delta\n    : 0\n\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh)),\n    s: round(max ? (delta / max) * 100 : 0),\n    v: round((max / 255) * 100),\n    a: props.a,\n  }\n}\n\nexport const roundHsva = (hsva: HsvaColor): HsvaColor => ({\n  h: round(hsva.h),\n  s: round(hsva.s),\n  v: round(hsva.v),\n  a: round(hsva.a, 2),\n})\n\nexport const rgbaToRgb = (props: RgbaColor): RgbColor => ({ r: props.r, g: props.g, b: props.b })\n\nexport const hslaToHsl = (props: HslaColor): HslColor => ({ h: props.h, s: props.s, l: props.l })\n\nexport const hsvaToHsv = (hsva: HsvaColor): HsvColor => {\n  const { h, s, v } = roundHsva(hsva)\n  return { h, s, v }\n}\n","import { Interactive, Interaction } from \"./Interactive\"\nimport { Pointer } from \"./Pointer\"\n\nimport { hsvaToHslString } from \"../../utils/convert\"\nimport { formatClassName } from \"../../utils/format\"\nimport { clamp } from \"../../utils/clamp\"\nimport { round } from \"../../utils/round\"\n\ninterface Props {\n  class?: string\n  hue: number\n  onChange: (newHue: { h: number }) => void\n}\n\nconst Hue = (props: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    props.onChange({ h: 360 * interaction.left })\n  }\n\n  const handleKey = (offset: Interaction) => {\n    // Hue measured in degrees of the color circle ranging from 0 to 360\n    props.onChange({\n      h: clamp(props.hue + offset.left * 360, 0, 360),\n    })\n  }\n\n  const nodeClass = formatClassName([\"solid-colorful__hue\", props.class])\n\n  return (\n    <div class={nodeClass}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Hue\"\n        aria-valuetext={round(props.hue)}\n      >\n        <Pointer\n          class=\"solid-colorful__hue-pointer\"\n          left={props.hue / 360}\n          color={hsvaToHslString({ h: props.hue, s: 100, v: 100, a: 1 })}\n        />\n      </Interactive>\n    </div>\n  )\n}\n\nexport { Hue }\n","import { Interactive, Interaction } from \"./Interactive\"\nimport { Pointer } from \"./Pointer\"\nimport { HsvaColor } from \"../../types\"\nimport { hsvaToHslString } from \"../../utils/convert\"\nimport { clamp } from \"../../utils/clamp\"\nimport { round } from \"../../utils/round\"\n\ninterface Props {\n  hsva: HsvaColor\n  onChange: (newColor: { s: number; v: number }) => void\n}\n\nconst Saturation = (props: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    props.onChange({\n      s: interaction.left * 100,\n      v: 100 - interaction.top * 100,\n    })\n  }\n\n  const handleKey = (offset: Interaction) => {\n    // Saturation and brightness always fit into [0, 100] range\n    props.onChange({\n      s: clamp(props.hsva.s + offset.left * 100, 0, 100),\n      v: clamp(props.hsva.v - offset.top * 100, 0, 100),\n    })\n  }\n\n  return (\n    <div\n      class=\"solid-colorful__saturation\"\n      style={{\n        \"background-color\": hsvaToHslString({ h: props.hsva.h, s: 100, v: 100, a: 1 }),\n      }}\n    >\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Color\"\n        aria-valuetext={`Saturation ${round(props.hsva.s)}%, Brightness ${round(props.hsva.v)}%`}\n      >\n        <Pointer\n          class=\"solid-colorful__saturation-pointer\"\n          top={1 - props.hsva.v / 100}\n          left={props.hsva.s / 100}\n          color={hsvaToHslString(props.hsva)}\n        />\n      </Interactive>\n    </div>\n  )\n}\n\nexport { Saturation }\n","import { hexToRgba } from \"./convert\"\nimport { ObjectColor } from \"../types\"\n\nexport const equalColorObjects = (first: ObjectColor, second: ObjectColor): boolean => {\n  if (first === second) return true\n\n  for (const prop in first) {\n    // The following allows for a type-safe calling of this function (first & second have to be HSL, HSV, or RGB)\n    // with type-unsafe iterating over object keys. TS does not allow this without an index (`[key: string]: number`)\n    // on an object to define how iteration is normally done. To ensure extra keys are not allowed on our types,\n    // we must cast our object to unknown (as RGB demands `r` be a key, while `Record<string, x>` does not care if\n    // there is or not), and then as a type TS can iterate over.\n    if (\n      (first as unknown as Record<string, number>)[prop] !==\n      (second as unknown as Record<string, number>)[prop]\n    )\n      return false\n  }\n\n  return true\n}\n\nexport const equalColorString = (first: string, second: string): boolean => {\n  return first.replace(/\\s/g, \"\") === second.replace(/\\s/g, \"\")\n}\n\nexport const equalHex = (first: string, second: string): boolean => {\n  if (first.toLowerCase() === second.toLowerCase()) return true\n\n  // To compare colors like `#FFF` and `ffffff` we convert them into RGB objects\n  return equalColorObjects(hexToRgba(first), hexToRgba(second))\n}\n","import { Accessor, createEffect, createSignal } from \"solid-js\"\nimport { ColorModel, AnyColor, HsvaColor } from \"../types\"\nimport { equalColorObjects } from \"../utils/compare\"\nimport { useEventCallback } from \"./useEventCallback\"\n\nexport function useColorManipulation<T extends AnyColor>(\n  colorModel: ColorModel<T>,\n  color: T,\n  onChange?: (color: T) => void\n): [Accessor<HsvaColor>, (color: Partial<HsvaColor>) => void] {\n  // Save onChange callback in the ref for avoiding \"useCallback hell\"\n  const onChangeCallback = useEventCallback<T>(onChange)\n\n  // No matter which color model is used (HEX, RGB(A) or HSL(A)),\n  // all internal calculations are based on HSVA model\n  const [hsva, updateHsva] = createSignal<HsvaColor>(colorModel.toHsva(color))\n\n  let cache = { color, hsva: hsva() }\n\n  // Update local HSVA-value if `color` property value is changed,\n  // but only if that's not the same color that we just sent to the parent\n  createEffect(() => {\n    if (!colorModel.equal(color, cache.color)) {\n      const newHsva = colorModel.toHsva(color)\n      cache = { hsva: newHsva, color }\n      updateHsva(newHsva)\n    }\n  })\n\n  // Trigger `onChange` callback only if an updated color is different from cached one;\n  // save the new color to the ref to prevent unnecessary updates\n  createEffect(() => {\n    let newColor\n    if (\n      !equalColorObjects(hsva(), cache.hsva) &&\n      !colorModel.equal((newColor = colorModel.fromHsva(hsva())), cache.color)\n    ) {\n      cache = { hsva: hsva(), color: newColor }\n      onChangeCallback(newColor)\n    }\n  })\n\n  // Merge the current HSVA color object with updated params.\n  // For example, when a child component sends `h` or `s` only\n  const handleChange = (params: Partial<HsvaColor>) => {\n    updateHsva((current) => Object.assign({}, current, params))\n  }\n\n  return [hsva, handleChange]\n}\n","declare const __webpack_nonce__: string | undefined\nlet nonce: string | undefined\n\n/**\n * Returns a nonce hash included by Webpack or the one defined manually by developer.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n * https://webpack.js.org/guides/csp/\n */\nexport const getNonce = (): string | undefined => {\n  if (nonce) return nonce\n  if (typeof __webpack_nonce__ !== \"undefined\") return __webpack_nonce__\n  return undefined\n}\n\n/**\n * Signs the style tag with a base64-encoded string (nonce) to conforms to Content Security Policies.\n * This function has to be invoked before any picker is rendered if you aren't using Webpack for CSP.\n */\nexport const setNonce = (hash: string): void => {\n  nonce = hash\n}\n","import { getNonce } from \"../utils/nonce\"\nimport { createEffect } from \"solid-js\"\n\n// Bundler is configured to load this as a processed minified CSS-string\nimport styles from \"../css/styles.css\"\n\nconst styleElementMap: Map<Document, HTMLStyleElement> = new Map()\n\n/**\n * Injects CSS code into the document's <head>\n */\nexport const useStyleSheet = (nodeRef?: HTMLDivElement): void => {\n  createEffect(() => {\n    const parentDocument = nodeRef ? nodeRef.ownerDocument : document\n\n    if (typeof parentDocument !== \"undefined\" && !styleElementMap.has(parentDocument)) {\n      const styleElement = parentDocument.createElement(\"style\")\n      styleElement.innerHTML = styles\n      styleElementMap.set(parentDocument, styleElement)\n\n      // Conform to CSP rules by setting `nonce` attribute to the inline styles\n      const nonce = getNonce()\n      if (nonce) styleElement.setAttribute(\"nonce\", nonce)\n\n      parentDocument.head.appendChild(styleElement)\n    }\n  })\n}\n","import { Hue } from \"./Hue\"\nimport { Saturation } from \"./Saturation\"\n\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from \"../../types\"\nimport { useColorManipulation } from \"../../hooks/useColorManipulation\"\nimport { useStyleSheet } from \"../../hooks/useStyleSheet\"\nimport { formatClassName } from \"../../utils/format\"\nimport { createSignal, splitProps } from \"solid-js\"\n\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\n  colorModel: ColorModel<T>\n}\n\nexport const ColorPicker = <T extends AnyColor>(props: Props<T>) => {\n  const [local, rest] = splitProps(props, [\"class\", \"colorModel\", \"color\", \"onChange\"])\n\n  const [nodeRef, setNodeRef] = createSignal<HTMLDivElement>()\n\n  useStyleSheet(nodeRef()!)\n\n  const [hsva, updateHsva] = useColorManipulation<T>(\n    local.colorModel,\n    local.color ?? props.colorModel.defaultColor,\n    local.onChange\n  )\n\n  const nodeClass = formatClassName([\"solid-colorful\", local.class])\n\n  return (\n    <div {...rest} ref={setNodeRef} class={nodeClass}>\n      <Saturation hsva={hsva()} onChange={updateHsva} />\n      <Hue hue={hsva().h} onChange={updateHsva} class=\"solid-colorful__last-control\" />\n    </div>\n  )\n}\n","import { ColorPicker } from \"./common/ColorPicker\"\nimport { ColorModel, ColorPickerBaseProps } from \"../types\"\nimport { equalHex } from \"../utils/compare\"\nimport { hexToHsva, hsvaToHex } from \"../utils/convert\"\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"000\",\n  toHsva: hexToHsva,\n  fromHsva: hsvaToHex,\n  equal: equalHex,\n}\n\nexport const HexColorPicker = (props: Partial<ColorPickerBaseProps<string>>) => (\n  <ColorPicker {...props} colorModel={colorModel} />\n)\n","import { Interaction, Interactive } from \"./Interactive\"\nimport { Pointer } from \"./Pointer\"\n\nimport { HsvaColor } from \"../../types\"\nimport { clamp } from \"../../utils/clamp\"\nimport { hsvaToHslaString } from \"../../utils/convert\"\nimport { formatClassName } from \"../../utils/format\"\nimport { round } from \"../../utils/round\"\n\ninterface Props {\n  class?: string\n  hsva: HsvaColor\n  onChange: (newAlpha: { a: number }) => void\n}\n\nexport const Alpha = (props: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    props.onChange({ a: interaction.left })\n  }\n\n  const handleKey = (offset: Interaction) => {\n    // Alpha always fit into [0, 1] range\n    props.onChange({ a: clamp(props.hsva.a + offset.left) })\n  }\n\n  // We use `Object.assign` instead of the spread operator\n  // to prevent adding the polyfill (about 150 bytes gzipped)\n  const colorFrom = hsvaToHslaString(Object.assign({}, props.hsva, { a: 0 }))\n  const colorTo = hsvaToHslaString(Object.assign({}, props.hsva, { a: 1 }))\n\n  const gradientStyle = {\n    backgroundImage: `linear-gradient(90deg, ${colorFrom}, ${colorTo})`,\n  }\n\n  const nodeClass = formatClassName([\"solid-colorful__alpha\", props.class])\n\n  return (\n    <div class={nodeClass}>\n      <div class=\"solid-colorful__alpha-gradient\" style={gradientStyle} />\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Alpha\"\n        aria-valuetext={`${round(props.hsva.a * 100)}%`}\n      >\n        <Pointer\n          class=\"solid-colorful__alpha-pointer\"\n          left={props.hsva.a}\n          color={hsvaToHslaString(props.hsva)}\n        />\n      </Interactive>\n    </div>\n  )\n}\n","import { Hue } from \"./Hue\"\nimport { Saturation } from \"./Saturation\"\nimport { Alpha } from \"./Alpha\"\n\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from \"../../types\"\nimport { useColorManipulation } from \"../../hooks/useColorManipulation\"\nimport { useStyleSheet } from \"../../hooks/useStyleSheet\"\nimport { formatClassName } from \"../../utils/format\"\nimport { createSignal, splitProps } from \"solid-js\"\n\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\n  colorModel: ColorModel<T>\n}\n\nexport const AlphaColorPicker = <T extends AnyColor>(props: Props<T>) => {\n  const [local, rest] = splitProps(props, [\"class\", \"colorModel\", \"color\", \"onChange\"])\n\n  const [nodeRef, setNodeRef] = createSignal<HTMLDivElement>()\n\n  useStyleSheet(nodeRef())\n\n  const [hsva, updateHsva] = useColorManipulation<T>(\n    local.colorModel,\n    local.color ?? local.colorModel.defaultColor,\n    local.onChange\n  )\n\n  const nodeClassName = formatClassName([\"solid-colorful\", local.class])\n\n  return (\n    <div {...rest} ref={setNodeRef} class={nodeClassName}>\n      <Saturation hsva={hsva()} onChange={updateHsva} />\n      <Hue hue={hsva().h} onChange={updateHsva} />\n      <Alpha hsva={hsva()} onChange={updateHsva} class=\"solid-colorful__last-control\" />\n    </div>\n  )\n}\n","import { AlphaColorPicker } from \"./common/AlphaColorPicker\"\nimport { ColorModel, ColorPickerBaseProps, HslaColor } from \"../types\"\nimport { equalColorObjects } from \"../utils/compare\"\nimport { hslaToHsva, hsvaToHsla } from \"../utils/convert\"\n\nconst colorModel: ColorModel<HslaColor> = {\n  defaultColor: { h: 0, s: 0, l: 0, a: 1 },\n  toHsva: hslaToHsva,\n  fromHsva: hsvaToHsla,\n  equal: equalColorObjects,\n}\n\nexport const HslaColorPicker = (props: Partial<ColorPickerBaseProps<HslaColor>>) => (\n  <AlphaColorPicker {...props} colorModel={colorModel} />\n)\n","import { ColorModel, ColorPickerBaseProps } from \"../types\"\nimport { equalColorString } from \"../utils/compare\"\nimport { hslaStringToHsva, hsvaToHslaString } from \"../utils/convert\"\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\"\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"hsla(0, 0%, 0%, 1)\",\n  toHsva: hslaStringToHsva,\n  fromHsva: hsvaToHslaString,\n  equal: equalColorString,\n}\n\nexport const HslaStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>) => (\n  <AlphaColorPicker {...props} colorModel={colorModel} />\n)\n","import { ColorModel, ColorPickerBaseProps, HslColor } from \"../types\"\nimport { equalColorObjects } from \"../utils/compare\"\nimport { hslaToHsl, hslaToHsva, hsvaToHsla } from \"../utils/convert\"\nimport { ColorPicker } from \"./common/ColorPicker\"\n\nconst colorModel: ColorModel<HslColor> = {\n  defaultColor: { h: 0, s: 0, l: 0 },\n  toHsva: ({ h, s, l }) => hslaToHsva({ h, s, l, a: 1 }),\n  fromHsva: (hsva) => hslaToHsl(hsvaToHsla(hsva)),\n  equal: equalColorObjects,\n}\n\nexport const HslColorPicker = (props: Partial<ColorPickerBaseProps<HslColor>>) => (\n  <ColorPicker {...props} colorModel={colorModel} />\n)\n","import { ColorModel, ColorPickerBaseProps } from \"../types\"\nimport { equalColorString } from \"../utils/compare\"\nimport { hslStringToHsva, hsvaToHslString } from \"../utils/convert\"\nimport { ColorPicker } from \"./common/ColorPicker\"\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"hsl(0, 0%, 0%)\",\n  toHsva: hslStringToHsva,\n  fromHsva: hsvaToHslString,\n  equal: equalColorString,\n}\n\nexport const HslStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>) => (\n  <ColorPicker {...props} colorModel={colorModel} />\n)\n","import { ColorModel, ColorPickerBaseProps, HsvaColor } from \"../types\"\nimport { equalColorObjects } from \"../utils/compare\"\nimport { roundHsva } from \"../utils/convert\"\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\"\n\nconst colorModel: ColorModel<HsvaColor> = {\n  defaultColor: { h: 0, s: 0, v: 0, a: 1 },\n  toHsva: (hsva) => hsva,\n  fromHsva: roundHsva,\n  equal: equalColorObjects,\n}\n\nexport const HsvaColorPicker = (props: Partial<ColorPickerBaseProps<HsvaColor>>) => (\n  <AlphaColorPicker {...props} colorModel={colorModel} />\n)\n","import { ColorModel, ColorPickerBaseProps } from \"../types\"\nimport { equalColorString } from \"../utils/compare\"\nimport { hsvaStringToHsva, hsvaToHsvaString } from \"../utils/convert\"\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\"\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"hsva(0, 0%, 0%, 1)\",\n  toHsva: hsvaStringToHsva,\n  fromHsva: hsvaToHsvaString,\n  equal: equalColorString,\n}\n\nexport const HsvaStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>) => (\n  <AlphaColorPicker {...props} colorModel={colorModel} />\n)\n","import { ColorPicker } from \"./common/ColorPicker\"\nimport { ColorModel, ColorPickerBaseProps, HsvColor } from \"../types\"\nimport { equalColorObjects } from \"../utils/compare\"\nimport { hsvaToHsv } from \"../utils/convert\"\n\nconst colorModel: ColorModel<HsvColor> = {\n  defaultColor: { h: 0, s: 0, v: 0 },\n  toHsva: ({ h, s, v }) => ({ h, s, v, a: 1 }),\n  fromHsva: hsvaToHsv,\n  equal: equalColorObjects,\n}\n\nexport const HsvColorPicker = (props: Partial<ColorPickerBaseProps<HsvColor>>) => (\n  <ColorPicker {...props} colorModel={colorModel} />\n)\n","import { ColorPicker } from \"./common/ColorPicker\"\nimport { ColorModel, ColorPickerBaseProps } from \"../types\"\nimport { equalColorString } from \"../utils/compare\"\nimport { hsvStringToHsva, hsvaToHsvString } from \"../utils/convert\"\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"hsv(0, 0%, 0%)\",\n  toHsva: hsvStringToHsva,\n  fromHsva: hsvaToHsvString,\n  equal: equalColorString,\n}\n\nexport const HsvStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>) => (\n  <ColorPicker {...props} colorModel={colorModel} />\n)\n","import { AlphaColorPicker } from \"./common/AlphaColorPicker\"\nimport { ColorModel, ColorPickerBaseProps, RgbaColor } from \"../types\"\nimport { equalColorObjects } from \"../utils/compare\"\nimport { rgbaToHsva, hsvaToRgba } from \"../utils/convert\"\n\nconst colorModel: ColorModel<RgbaColor> = {\n  defaultColor: { r: 0, g: 0, b: 0, a: 1 },\n  toHsva: rgbaToHsva,\n  fromHsva: hsvaToRgba,\n  equal: equalColorObjects,\n}\n\nexport const RgbaColorPicker = (props: Partial<ColorPickerBaseProps<RgbaColor>>) => (\n  <AlphaColorPicker {...props} colorModel={colorModel} />\n)\n","import { AlphaColorPicker } from \"./common/AlphaColorPicker\"\nimport { ColorModel, ColorPickerBaseProps } from \"../types\"\nimport { equalColorString } from \"../utils/compare\"\nimport { rgbaStringToHsva, hsvaToRgbaString } from \"../utils/convert\"\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"rgba(0, 0, 0, 1)\",\n  toHsva: rgbaStringToHsva,\n  fromHsva: hsvaToRgbaString,\n  equal: equalColorString,\n}\n\nexport const RgbaStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>) => (\n  <AlphaColorPicker {...props} colorModel={colorModel} />\n)\n","import { ColorPicker } from \"./common/ColorPicker\"\nimport { ColorModel, ColorPickerBaseProps, RgbColor } from \"../types\"\nimport { equalColorObjects } from \"../utils/compare\"\nimport { rgbaToHsva, hsvaToRgba, rgbaToRgb } from \"../utils/convert\"\n\nconst colorModel: ColorModel<RgbColor> = {\n  defaultColor: { r: 0, g: 0, b: 0 },\n  toHsva: ({ r, g, b }) => rgbaToHsva({ r, g, b, a: 1 }),\n  fromHsva: (hsva) => rgbaToRgb(hsvaToRgba(hsva)),\n  equal: equalColorObjects,\n}\n\nexport const RgbColorPicker = (props: Partial<ColorPickerBaseProps<RgbColor>>) => (\n  <ColorPicker {...props} colorModel={colorModel} />\n)\n","import { ColorPicker } from \"./common/ColorPicker\"\nimport { ColorModel, ColorPickerBaseProps } from \"../types\"\nimport { equalColorString } from \"../utils/compare\"\nimport { rgbStringToHsva, hsvaToRgbString } from \"../utils/convert\"\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"rgb(0, 0, 0)\",\n  toHsva: rgbStringToHsva,\n  fromHsva: hsvaToRgbString,\n  equal: equalColorString,\n}\n\nexport const RgbStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>) => (\n  <ColorPicker {...props} colorModel={colorModel} />\n)\n","const matcher = /^#?([0-9A-F]{3,8})$/i\n\nexport const validHex = (value: string, alpha?: boolean): boolean => {\n  const match = matcher.exec(value)\n  const length = match ? match[1].length : 0\n\n  return (\n    length === 3 || // '#rgb' format\n    length === 6 || // '#rrggbb' format\n    (!!alpha && length === 4) || // '#rgba' format\n    (!!alpha && length === 8) // '#rrggbbaa' format\n  )\n}\n","import { createEffect, createSignal, splitProps } from \"solid-js\"\n\nimport { useEventCallback } from \"../../hooks/useEventCallback\"\nimport { ColorInputBaseProps } from \"../../types\"\n\ntype EventWithTarget = Event & { target: { value: string } }\n\ninterface Props extends ColorInputBaseProps {\n  /** Blocks typing invalid characters and limits string length */\n  escape: (value: string) => string\n  /** Checks that value is valid color string */\n  validate: (value: string) => boolean\n  /** Processes value before displaying it in the input */\n  format?: (value: string) => string\n  /** Processes value before sending it in `onChange` */\n  process?: (value: string) => string\n}\n\nexport const ColorInput = (props: Props) => {\n  const [local, rest] = splitProps(props, [\n    \"color\",\n    \"escape\",\n    \"format\",\n    \"onBlur\",\n    \"onChange\",\n    \"process\",\n    \"validate\",\n  ])\n\n  const [value, setValue] = createSignal(local.escape(local.color || \"\"))\n  const onChangeCallback = useEventCallback<string>(local.onChange)\n  const onBlurCallback = useEventCallback(local.onBlur as any)\n\n  // Trigger `onChange` handler only if the input value is a valid color\n  const handleChange = (e: EventWithTarget) => {\n    const inputValue = local.escape(e.target.value)\n    setValue(inputValue)\n    if (local.validate(inputValue))\n      onChangeCallback(local.process ? local.process(inputValue) : inputValue)\n  }\n\n  // Take the color from props if the last typed color (in local state) is not valid\n  const handleBlur = (e: EventWithTarget) => {\n    if (!local.validate(e.target.value)) setValue(local.escape(local.color || \"\"))\n    onBlurCallback(e)\n  }\n\n  // Update the local state when `color` property value is changed\n  createEffect(() => {\n    setValue(local.escape(local.color || \"\"))\n  })\n\n  return (\n    <input\n      {...rest}\n      value={local.format ? local.format(value()) : value()}\n      // the element should not be checked for spelling errors\n      // @ts-expect-error: this doesn't exists\n      spellcheck=\"false\"\n      onChange={handleChange as any}\n      onBlur={handleBlur as any}\n    />\n  )\n}\n","import { splitProps } from \"solid-js\"\nimport { ColorInputBaseProps } from \"../types\"\n\nimport { validHex } from \"../utils/validate\"\nimport { ColorInput } from \"./common/ColorInput\"\n\ninterface HexColorInputProps extends ColorInputBaseProps {\n  /** Enables `#` prefix displaying */\n  prefixed?: boolean\n  /** Allows `#rgba` and `#rrggbbaa` color formats */\n  alpha?: boolean\n}\n\n/** Adds \"#\" symbol to the beginning of the string */\nconst prefix = (value: string) => \"#\" + value\n\nexport const HexColorInput = (props: HexColorInputProps) => {\n  const [local, rest] = splitProps(props, [\"alpha\", \"prefixed\"])\n\n  /** Escapes all non-hexadecimal characters including \"#\" */\n  const escape = (value: string) =>\n    value.replace(/([^0-9A-F]+)/gi, \"\").substring(0, local.alpha ? 8 : 6)\n\n  /** Validates hexadecimal strings */\n  const validate = (value: string) => validHex(value, local.alpha)\n\n  return (\n    <ColorInput\n      {...rest}\n      escape={escape}\n      format={local.prefixed ? prefix : undefined}\n      process={prefix}\n      validate={validate}\n    />\n  )\n}\n"],"names":["useEventCallback","handler","callbackRef","value","clamp","number","min","max","isTouch","event","Interactive","props","splitProps","local","rest","onKeyCallback","onMove","onKey","createMemo","handleMove","preventDefault","preventDefaultMove","toggleDocumentEvents","handleMoveEnd","state","parentWindow","self","toggleEvent","addEventListener","removeEventListener","handleMoveStart","handleKeyDown","keyCode","which","left","top","createEffect","onTouchStart","events","onMouseDown","class","ref","onKeyDown","tabIndex","role","formatClassName","names","filter","Boolean","join","Pointer","nodeClass","h","style","color","round","digits","base","Math","pow","angleUnits","grad","turn","rad","PI","hex","substr","length","r","parseInt","g","b","a","parseHue","unit","hslString","match","exec","s","Number","l","undefined","v","hslStringToHsva","hslaStringToHsva","hslaToHsva","hsvaToHsla","hh","hsvaToHslString","hsva","_hsvaToHsla","hsvaToHslaString","_hsvaToHsla2","floor","c","d","module","hsvaStringToHsva","hsvString","roundHsva","hsvStringToHsva","rgbaStringToHsva","rgbaString","rgbaToHsva","rgbStringToHsva","format","toString","delta","Hue","interaction","onChange","offset","hue","Saturation","equalColorObjects","first","second","prop","equalColorString","replace","colorModel","onChangeCallback","createSignal","toHsva","_createSignal","updateHsva","cache","equal","newHsva","newColor","fromHsva","params","current","assign","getNonce","nonce","setNonce","hash","styleElementMap","Map","useStyleSheet","nodeRef","parentDocument","ownerDocument","document","has","styleElement","createElement","innerHTML","set","setAttribute","head","appendChild","ColorPicker","_local$color","_splitProps","setNodeRef","useColorManipulation","defaultColor","_useColorManipulation","hexToRgba","hsvaToRgba","toLowerCase","HexColorPicker","_extends","Alpha","gradientStyle","backgroundImage","colorFrom","Object","colorTo","AlphaColorPicker","nodeClassName","HslaColorPicker","HslaStringColorPicker","_ref","hslaToHsl","HslColorPicker","HslStringColorPicker","_roundHsva2","HsvaStringColorPicker","_roundHsva3","HsvColorPicker","_roundHsva","HsvStringColorPicker","RgbaColorPicker","_hsvaToRgba2","RgbaStringColorPicker","rgbaToRgb","RgbColorPicker","_hsvaToRgba","RgbStringColorPicker","matcher","ColorInput","escape","setValue","onBlurCallback","onBlur","spellcheck","e","inputValue","target","validate","process","prefix","substring","alpha","prefixed","validHex"],"mappings":"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"}